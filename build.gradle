apply plugin: 'com.android.library'

buildscript {
    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.3.1'
    }
}




dependencies {
    implementation fileTree(include: '*.jar', dir: 'libs')
}

android {
   compileSdkVersion 23

    defaultConfig {
        minSdkVersion 7
        targetSdkVersion 11

        /*externalNativeBuild {
            cmake {
                cFlags "-D_EXAMPLE_C_FLAG1", "-D_EXAMPLE_C_FLAG2"
                cppFlags "-D__STDC_FORMAT_MACROS"
            }
        }
        ndk {
            abiFilters 'x86', 'armeabi', 'armeabi-v7a'
        }*/
    }

    /*externalNativeBuild {
        cmake {
            path "../../doubango/CMakeLists.txt"
        }
    }*/

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
            jniLibs.srcDirs = ['libs']
        }

        // Move the tests to tests/java, tests/res, etc...
        //instrumentTest.setRoot('tests')

        // Move the build types to build-types/<type>
        // For instance, build-types/debug/java, build-types/debug/AndroidManifest.xml, ...
        // This moves them out of them default location under src/<type>/... which would
        // conflict with src/ being used by the main source set.
        // Adding new build types or product flavors should be accompanied
        // by a similar customization.
        debug.setRoot('build-types/debug')
        release.setRoot('build-types/release')
    }
}